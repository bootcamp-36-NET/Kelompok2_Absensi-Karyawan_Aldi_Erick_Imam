// <auto-generated />
using System;
using API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

<<<<<<< HEAD
=======
            modelBuilder.Entity("API.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<DateTimeOffset>("createdDate");

                    b.Property<DateTimeOffset>("deletedDate");

                    b.Property<bool>("isDelete");

                    b.Property<DateTimeOffset>("updatedDate");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("API.Models.Divisions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<string>("Name");

                    b.Property<DateTimeOffset>("createdDate");

                    b.Property<DateTimeOffset>("deletedDate");

                    b.Property<bool>("isDelete");

                    b.Property<DateTimeOffset>("updatedDate");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Divisions");
                });

>>>>>>> d47b1edae261bda703958afa3484791fbd31bc2e
            modelBuilder.Entity("API.Models.Employee", b =>
                {
                    b.Property<string>("EmployeeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

<<<<<<< HEAD
                    b.Property<DateTimeOffset>("CreateDate");
=======
                    b.Property<DateTimeOffset>("CreateData");
>>>>>>> d47b1edae261bda703958afa3484791fbd31bc2e

                    b.Property<DateTimeOffset>("DeleteData");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<DateTimeOffset>("UpdateDate");

                    b.Property<bool>("isDelete");

                    b.HasKey("EmployeeId");

                    b.ToTable("Tb_Employee");
                });
<<<<<<< HEAD
=======

            modelBuilder.Entity("API.Models.Divisions", b =>
                {
                    b.HasOne("API.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });
>>>>>>> d47b1edae261bda703958afa3484791fbd31bc2e
#pragma warning restore 612, 618
        }
    }
}
